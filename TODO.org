* ingest data
** DONE from file
   CLOSED: [2020-03-09 Mon 16:44]
** DONE from db
   CLOSED: [2020-03-25 Wed 17:04]
** DONE Infer references
   CLOSED: [2020-04-06 Mon 14:56]
** DONE Infer references for tuples
   CLOSED: [2020-04-07 Tue 15:45]
** DONE Infer deprecations
   CLOSED: [2020-04-06 Mon 14:56]
** from db with a command line tool
The tool should be a 'quick view' of an unfamiliar database, one that hasn't yet been annotated with supplemental schema.
The tool should parse command line args for the client config and db name.
Then it should ingest the db, inferring references and deprecations.
* process data into datascript db
** DONE basic schema
   CLOSED: [2020-03-09 Mon 14:17]
** DONE with deprecations
   CLOSED: [2020-03-09 Mon 14:43]
** DONE with see-also
   CLOSED: [2020-03-09 Mon 14:56]
** DONE with references
   CLOSED: [2020-03-09 Mon 16:41]
** DONE with tuples
   CLOSED: [2020-03-27 Fri 14:29]
** DONE with tuple references
   CLOSED: [2020-03-27 Fri 14:29]
** DONE include tuple references in Referenced By
   CLOSED: [2020-03-27 Fri 16:50]
** DONE with derived aggregate/enum
   CLOSED: [2020-03-09 Mon 16:42]
** DONE with explicit aggregate/enum
   CLOSED: [2020-03-09 Mon 16:42]
** CANCELED with attribute predicates
   CLOSED: [2020-03-27 Fri 16:51]
** DONE with entity specs
   CLOSED: [2020-03-27 Fri 17:56]
** DONE allow doc strings on collections
   CLOSED: [2020-03-10 Tue 18:06]
* inspect data
** DONE index
   CLOSED: [2020-03-10 Tue 15:44]
** DONE aggregate table
   CLOSED: [2020-03-10 Tue 15:45]
*** DONE referenced by
    CLOSED: [2020-03-09 Mon 22:24]
*** DONE name
    CLOSED: [2020-03-09 Mon 21:31]
*** DONE primary key?
    CLOSED: [2020-03-10 Tue 15:44]
*** DONE type, with refs
    CLOSED: [2020-03-09 Mon 22:24]
*** DONE comments
    CLOSED: [2020-03-09 Mon 21:31]
*** DONE see also
    CLOSED: [2020-03-09 Mon 22:24]
*** DONE special attributes
    CLOSED: [2020-03-09 Mon 21:31]
*** DONE deprecated
    CLOSED: [2020-03-10 Tue 15:45]
*** DONE sorted
    CLOSED: [2020-03-10 Tue 15:45]
** DONE enum table
   CLOSED: [2020-03-10 Tue 15:45]
*** DONE referenced by
    CLOSED: [2020-03-09 Mon 22:24]
*** DONE name
    CLOSED: [2020-03-09 Mon 21:13]
*** DONE comments
    CLOSED: [2020-03-09 Mon 21:13]
*** DONE see also
    CLOSED: [2020-03-09 Mon 22:24]
*** DONE special attributes
    CLOSED: [2020-03-09 Mon 21:31]
*** DONE deprecated
    CLOSED: [2020-03-10 Tue 15:45]
*** DONE sorted
    CLOSED: [2020-03-10 Tue 15:45]
** DONE connections graph for one aggregate/enum
   CLOSED: [2020-03-19 Thu 15:30]
** DONE full graph
   CLOSED: [2020-03-19 Thu 23:32]
** DONE connections graph for one agregate/enum, force directed, including inbound references
   CLOSED: [2020-03-19 Thu 23:33]
** DONE pannable connections graph
   CLOSED: [2020-04-02 Thu 16:00]
** DONE keep arrow tips close to the target
   CLOSED: [2020-03-28 Sat 10:21]
** DONE toggle enums in diagrams
   CLOSED: [2020-03-27 Fri 18:22]
* export data
** DONE to static datascript db
   CLOSED: [2020-03-10 Tue 23:22]
** DONE to live HTML, with inlined data
   CLOSED: [2020-03-10 Tue 23:23]
** DONE to static HTML, with inlined JS and CSS
   CLOSED: [2020-03-28 Sat 15:21]
** DONE to svg
   CLOSED: [2020-03-25 Wed 17:10]
Done by Vega, see toolbox to upper right of diagram
* refactoring
** DONE switch to just datascript and reagent... don't need re-frame or re-posh
   CLOSED: [2020-03-10 Tue 22:38]
** DONE why do we have both entity and attribute? aren't they two names for the same thing?
   CLOSED: [2020-03-27 Fri 20:06]
** DONE fix :a within another :a on collection page: invalid DOM
   CLOSED: [2020-03-17 Tue 14:56]
** DONE try CSS purge
   CLOSED: [2020-03-11 Wed 22:30]
** Promote :db/tupleAttrs to attribute references during `data/process`? It works OK to pull the attribute data later, by ident.
** DONE Convert CLJC to CLJS: no need to render from a clojure process
   CLOSED: [2020-04-03 Fri 11:08]
** DONE Move dev/examples.clj to dev/ingest/projects/mbrainz.clj and update README
   CLOSED: [2020-04-01 Wed 13:10]
** Experiment with giving collections a compound :db/ident of [:aggregate :person]
So that you can transact several times.
** DONE Consider switching diagrams to GraphViz
   CLOSED: [2020-04-02 Thu 16:00]
See https://github.com/felixflores/datomic_schema_grapher for some ideas
* documentation
** DONE terminology
   CLOSED: [2020-03-31 Tue 16:57]
*** collections, aggregates, enums, attributes, constants
** DONE supplemental schema
   CLOSED: [2020-03-31 Tue 16:57]
*** references, part-of, see-also, deprecated, collections (and db/doc)
*** tuple-references, tuple/position
*** in db, or not
*** derived or explicit
** DONE how to ingest data
   CLOSED: [2020-03-31 Tue 16:57]
*** dev/projects/* folders
*** :ingest alias
*** :datomic alias
*** add annotations
*** clj -A:ingest -m ingest.projects.mbrainz
*** clj -A:ingest -m ingest.files <file>*
*** clj -A:ingest:datomic -m ingest.projects.my-project
** DONE how to run local, live web page
   CLOSED: [2020-03-31 Tue 16:57]
*** generate schema database
*** yarn run html
*** yarn run css
*** yarn run watch-js
*** open https://localhost:8080
** DONE how to create standalone web page
   CLOSED: [2020-03-31 Tue 16:57]
*** generate schema database
*** yarn --prod run standalone
*** open target/standalone.html
** DONE how to host web page
   CLOSED: [2020-03-31 Tue 16:57]
*** generate schema database
*** yarn --prod run clean
*** yarn --prod run html
*** yarn --prod run css
*** yarn --prod run compile-js
*** upload assets/* to Netlify, or a server of your choice
** DONE acknowledgements
   CLOSED: [2020-03-31 Tue 16:57]
*** datascript
*** reagent
*** oz
*** shadow
*** tailwindcss, postcss and purgecss
** DONE license
   CLOSED: [2020-04-02 Thu 12:08]
* erd config
** DONE toggle attr and collection
   CLOSED: [2020-04-03 Fri 15:57]
** DONE hide attrs
   CLOSED: [2020-04-04 Sat 00:33]
** show non-ref attrs?
